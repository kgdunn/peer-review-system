# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2017-03-10 23:00
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Enrolled',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enrolled', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name=b'Group name')),
                ('description', models.TextField(blank=True, verbose_name=b'Detailed group description')),
                ('capacity', models.PositiveIntegerField(default=0, help_text=b'How many people in this particular group instance?')),
                ('order', models.PositiveIntegerField(default=0, help_text=b'For ordering purposes in the tables.')),
            ],
        ),
        migrations.CreateModel(
            name='Group_Formation_Process',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LTI_system', models.CharField(choices=[(b'Brightspace-v1', b'Brightspace-v1'), (b'edX-v1', b'edX-v1')], max_length=50)),
                ('title', models.CharField(max_length=300, verbose_name=b'Group formation name')),
                ('LTI_id', models.CharField(help_text=b'In Brightspace LTI post: "resource_link_id"', max_length=50, verbose_name=b'LTI ID')),
                ('instructions', models.TextField(help_text=b'May contain HTML instructions', verbose_name=b'Overall instructions to learners')),
                ('dt_groups_open_up', models.DateTimeField(verbose_name=b'When can learners start to register')),
                ('dt_selfenroll_starts', models.DateTimeField(help_text=b'Usually the same as above date/time, but can be later', verbose_name=b'When does self-enrolment start?')),
                ('dt_group_selection_stops', models.DateTimeField(verbose_name=b'When does group selection stop')),
                ('allow_unenroll', models.BooleanField(default=True, help_text=b'Can learners unenroll, which implies they will also be allowed to re-enroll, until the close off date/time.')),
                ('show_fellows', models.BooleanField(default=False, help_text=b'Can learners see the FirstName LastName of the other people enrolled in their groups.')),
                ('show_description', models.BooleanField(default=True, help_text=b'Should we show the group descriptions also?')),
                ('random_add_unenrolled_after_cutoff', models.BooleanField(default=False, help_text=b'Should we randomly allocate unenrolled users after the cut-off date/time ("dt_group_selection_stops")?', verbose_name=b'Randomly add unenrolled learners after the cutoff date/time')),
            ],
            options={
                'verbose_name': 'Group formation process',
                'verbose_name_plural': 'Group formation processes',
            },
        ),
    ]
