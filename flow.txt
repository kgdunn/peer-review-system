TO DO
======

Convert submissions to PDFs
Alternating colours | radio buttons aligned and indented in rubric
Process results of evaluations to display back to students





Nice to add
===========

Statistics for duration of review


Submission steps:
* If the submission time is prior to the deadline, allow a new submission
* Indicate if prior submissions are found (dimmer colour)
* If past deadline: indicate that a new submisison cannot be allowed
* Once submitted, send an email with confirmation to group/learner
  -> should indicate when to return to start with the review process.


* Update datastructure on the group addition?

Review process
==============

New user: create user in this course
Show the next reviews to complete
Set up the rubric when the review is actually started

New user:
* done: Find the PR
* done: Find the submission
* done: Get the RubricTemplate
* done: Make a RubricActual
* done: Save
* done: Create 1+ RItemActuals
* done: Save each one


presented with the next available review
click to expand and start
shown the document and the rubric side by side
in a responsive way that the rubric goes below the document
rubric answers are saved as entered in realtime
resume /save as draft/submit

Cannot edit/resubmit after submission date


If the page is reloaded, it shows the options from last time



"""
I need a way to allocate reviews to a learner.
* once allocated, it is remembered (state). So when they come back they see the
  same N = 3 reviews, in the same order, waiting for them.

  class Review:
       * source = Submission
       * reviewer = Person
       * allocated_datetime
       * order = 1, 2, 3, 4, ...?
       *

* The review is allocated out of the pool of all submissions.is_valid and take
  the next available review that:
    * is not from the same group as the reviewer
    * has not already been seen by the reviewer
    * that has the lowest number of allocations so far

* Handle self-review still


"""
