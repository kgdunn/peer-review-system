# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-03-10 23:34
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('review', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='course',
            name='label',
            field=models.CharField(help_text="Obtain this from the HTML POST field: 'context_id' ", max_length=300, verbose_name='LTI POST label'),
        ),
        migrations.AlterField(
            model_name='course',
            name='name',
            field=models.CharField(max_length=300, verbose_name='Course name'),
        ),
        migrations.AlterField(
            model_name='course',
            name='offering',
            field=models.PositiveIntegerField(blank=True, default='0000', help_text='Which year/quarter is it being offered?'),
        ),
        migrations.AlterField(
            model_name='peerevaluationphase',
            name='number_of_reviews_per_learner',
            field=models.PositiveIntegerField(default=3, help_text='How many reviews must each learner complete?'),
        ),
        migrations.AlterField(
            model_name='person',
            name='display_name',
            field=models.CharField(blank=True, max_length=400, verbose_name='Display name'),
        ),
        migrations.AlterField(
            model_name='person',
            name='is_active',
            field=models.BooleanField(default=True, help_text='NOT USED'),
        ),
        migrations.AlterField(
            model_name='person',
            name='role',
            field=models.CharField(choices=[('Admin', 'Administrator'), ('Learn', 'Learner'), ('TA', 'Teaching Assistant')], default='Learn', max_length=5),
        ),
        migrations.AlterField(
            model_name='person',
            name='student_number',
            field=models.CharField(blank=True, default='', max_length=15),
        ),
        migrations.AlterField(
            model_name='person',
            name='user_ID',
            field=models.CharField(blank=True, max_length=100, verbose_name='User ID from LMS/LTI'),
        ),
        migrations.AlterField(
            model_name='pr_process',
            name='LTI_id',
            field=models.CharField(help_text='In Brightspace LTI post: "resource_link_id"', max_length=50, verbose_name='LTI ID'),
        ),
        migrations.AlterField(
            model_name='pr_process',
            name='LTI_system',
            field=models.CharField(choices=[('Brightspace-v1', 'Brightspace-v1'), ('edX-v1', 'edX-v1'), ('Coursera-v1', 'Coursera-v1')], max_length=50),
        ),
        migrations.AlterField(
            model_name='pr_process',
            name='LTI_title',
            field=models.CharField(help_text='A title to identify this PR in the database', max_length=300, verbose_name='LTI Title'),
        ),
        migrations.AlterField(
            model_name='pr_process',
            name='gf_process',
            field=models.ForeignKey(blank=True, default=None, help_text='Must be specified if groups are being used.', null=True, on_delete=django.db.models.deletion.CASCADE, to='groups.Group_Formation_Process'),
        ),
        migrations.AlterField(
            model_name='pr_process',
            name='instructions',
            field=models.TextField(help_text='May contain HTML instructions', verbose_name='Overall instructions to learners'),
        ),
        migrations.AlterField(
            model_name='pr_process',
            name='title',
            field=models.CharField(max_length=300, verbose_name='Your peer review title'),
        ),
        migrations.AlterField(
            model_name='pr_process',
            name='uses_groups',
            field=models.BooleanField(default=False, help_text='The workflow and responses are slightly modified if groups are used.'),
        ),
        migrations.AlterField(
            model_name='prphase',
            name='end_dt',
            field=models.DateTimeField(verbose_name='End of this phase'),
        ),
        migrations.AlterField(
            model_name='prphase',
            name='instructions',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='prphase',
            name='is_active',
            field=models.BooleanField(default=True, help_text='An override, allowing you to stage/draft phases.'),
        ),
        migrations.AlterField(
            model_name='prphase',
            name='name',
            field=models.CharField(default='... Phase ...', max_length=50),
        ),
        migrations.AlterField(
            model_name='prphase',
            name='pr',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='review.PR_process', verbose_name='Peer review'),
        ),
        migrations.AlterField(
            model_name='prphase',
            name='start_dt',
            field=models.DateTimeField(verbose_name='Start of this phase'),
        ),
        migrations.AlterField(
            model_name='prphase',
            name='templatetext',
            field=models.TextField(blank=True, default='', help_text='The template rendered to the user'),
        ),
        migrations.AlterField(
            model_name='ritemtemplate',
            name='criterion',
            field=models.TextField(help_text='The prompt/criterion for the row in the rubric'),
        ),
        migrations.AlterField(
            model_name='ritemtemplate',
            name='max_score',
            field=models.FloatField(help_text='Highest score achievable here'),
        ),
        migrations.AlterField(
            model_name='ritemtemplate',
            name='option_type',
            field=models.CharField(choices=[('Radio', 'Radio buttons (default)'), ('DropD', 'Dropdown of scores'), ('LText', 'Long text [HTML Text area]'), ('SText', 'Short text [HTML input=text]')], default='Radio', max_length=5),
        ),
        migrations.AlterField(
            model_name='roptiontemplate',
            name='criterion',
            field=models.TextField(blank=True, help_text='A prompt/criterion to the peers'),
        ),
        migrations.AlterField(
            model_name='roptiontemplate',
            name='score',
            field=models.FloatField(help_text='Usually: 1, 2, 3, 4, etc points'),
        ),
        migrations.AlterField(
            model_name='roptiontemplate',
            name='short_text',
            field=models.CharField(blank=True, default='', help_text='This text is in the drop down', max_length=50),
        ),
        migrations.AlterField(
            model_name='rubricactual',
            name='status',
            field=models.CharField(choices=[('A', 'Assigned to grader'), ('P', 'Progressing...'), ('C', 'Completed')], default='A', max_length=2),
        ),
        migrations.AlterField(
            model_name='rubricactual',
            name='submitted',
            field=models.BooleanField(default=False, help_text='Has been completed reviewed AND submitted by peer grader.'),
        ),
        migrations.AlterField(
            model_name='rubrictemplate',
            name='general_instructions',
            field=models.TextField(default=''),
        ),
        migrations.AlterField(
            model_name='rubrictemplate',
            name='show_order',
            field=models.BooleanField(default=True, help_text='Shows the order numbers. e.g "1. Assess ..."; else it just shows: "Assess ..."'),
        ),
        migrations.AlterField(
            model_name='rubrictemplate',
            name='title',
            field=models.CharField(max_length=300, verbose_name='Peer review rubric'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='datetime_submitted',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Date and time the learner/group submitted.'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='group_submitted',
            field=models.ForeignKey(blank=True, default=None, help_text='If a group submission, it links back to it.', null=True, on_delete=django.db.models.deletion.CASCADE, to='groups.Group'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='is_valid',
            field=models.BooleanField(default=False, help_text='Valid if: it was submitted on time, or if this is the most recent submission (there might be older ones).'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='number_reviews_assigned',
            field=models.PositiveSmallIntegerField(default=0, help_text='Number of times this submission has been assigned'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='number_reviews_completed',
            field=models.PositiveSmallIntegerField(default=0, help_text='Number of times this submission has been completed'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='phase',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='review.PRPhase', verbose_name='Attached with which phase'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='pr_process',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='review.PR_process', verbose_name='Peer review'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='status',
            field=models.CharField(choices=[('S', 'Submitted'), ('T', 'Submitted late'), ('F', 'Finished'), ('G', 'Being peer-reviewed/graded'), ('N', 'Nothing submitted yet')], default='N', max_length=2),
        ),
        migrations.AlterField(
            model_name='submission',
            name='submitted_file_name',
            field=models.CharField(default='', max_length=255),
        ),
        migrations.AlterField(
            model_name='submissionphase',
            name='accepted_file_types_comma_separated',
            field=models.CharField(default='PDF', help_text='Comma separated list, for example: pdf, docx, doc', max_length=100),
        ),
    ]
