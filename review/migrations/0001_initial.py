# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2017-03-10 23:00
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import review.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('groups', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name=b'Course name')),
                ('label', models.CharField(help_text=b"Obtain this from the HTML POST field: 'context_id' ", max_length=300, verbose_name=b'LTI POST label')),
                ('offering', models.PositiveIntegerField(blank=True, default=b'0000', help_text=b'Which year/quarter is it being offered?')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text=b'NOT USED')),
                ('email', models.EmailField(max_length=254)),
                ('student_number', models.CharField(blank=True, default=b'', max_length=15)),
                ('display_name', models.CharField(blank=True, max_length=400, verbose_name=b'Display name')),
                ('user_ID', models.CharField(blank=True, max_length=100, verbose_name=b'User ID from LMS/LTI')),
                ('role', models.CharField(choices=[(b'Admin', b'Administrator'), (b'Learn', b'Learner'), (b'TA', b'Teaching Assistant')], default=b'Learn', max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='PR_process',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LTI_system', models.CharField(choices=[(b'Brightspace-v1', b'Brightspace-v1'), (b'edX-v1', b'edX-v1'), (b'Coursera-v1', b'Coursera-v1')], max_length=50)),
                ('title', models.CharField(max_length=300, verbose_name=b'Your peer review title')),
                ('LTI_id', models.CharField(help_text=b'In Brightspace LTI post: "resource_link_id"', max_length=50, verbose_name=b'LTI ID')),
                ('LTI_title', models.CharField(help_text=b'A title to identify this PR in the database', max_length=300, verbose_name=b'LTI Title')),
                ('uses_groups', models.BooleanField(default=False, help_text=b'The workflow and responses are slightly modified if groups are used.')),
                ('instructions', models.TextField(help_text=b'May contain HTML instructions', verbose_name=b'Overall instructions to learners')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='review.Course')),
                ('gf_process', models.ForeignKey(blank=True, default=None, help_text=b'Must be specified if groups are being used.', null=True, on_delete=django.db.models.deletion.CASCADE, to='groups.Group_Formation_Process')),
            ],
            options={
                'verbose_name': 'Peer review process',
                'verbose_name_plural': 'PR processes',
            },
        ),
        migrations.CreateModel(
            name='PRPhase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=b'... Phase ...', max_length=50)),
                ('order', models.PositiveIntegerField(default=1)),
                ('start_dt', models.DateTimeField(verbose_name=b'Start of this phase')),
                ('end_dt', models.DateTimeField(verbose_name=b'End of this phase')),
                ('is_active', models.BooleanField(default=True, help_text=b'An override, allowing you to stage/draft phases.')),
                ('instructions', models.TextField(blank=True, default=b'')),
                ('templatetext', models.TextField(blank=True, default=b'', help_text=b'The template rendered to the user')),
            ],
            options={
                'verbose_name': 'PR phase',
                'verbose_name_plural': 'PR phases',
            },
        ),
        migrations.CreateModel(
            name='RItemActual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('submitted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RItemTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField()),
                ('criterion', models.TextField(help_text=b'The prompt/criterion for the row in the rubric')),
                ('max_score', models.FloatField(help_text=b'Highest score achievable here')),
                ('option_type', models.CharField(choices=[(b'Radio', b'Radio buttons (default)'), (b'DropD', b'Dropdown of scores'), (b'LText', b'Long text [HTML Text area]'), (b'SText', b'Short text [HTML input=text]')], default=b'Radio', max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='ROptionActual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True)),
                ('submitted', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('ritem_actual', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='review.RItemActual')),
            ],
        ),
        migrations.CreateModel(
            name='ROptionTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(help_text=b'Usually: 1, 2, 3, 4, etc points')),
                ('short_text', models.CharField(blank=True, default=b'', help_text=b'This text is in the drop down', max_length=50)),
                ('criterion', models.TextField(blank=True, help_text=b'A prompt/criterion to the peers')),
                ('order', models.IntegerField()),
                ('rubric_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='review.RItemTemplate')),
            ],
        ),
        migrations.CreateModel(
            name='RubricActual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[(b'A', b'Assigned to grader'), (b'P', b'Progressing...'), (b'C', b'Completed')], default=b'A', max_length=2)),
                ('submitted', models.BooleanField(default=False, help_text=b'Has been completed reviewed AND submitted by peer grader.')),
                ('unique_code', models.CharField(blank=True, editable=False, max_length=16)),
                ('graded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='review.Person')),
            ],
        ),
        migrations.CreateModel(
            name='RubricTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, verbose_name=b'Peer review rubric')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('general_instructions', models.TextField(default=b'')),
                ('show_order', models.BooleanField(default=True, help_text=b'Shows the order numbers. e.g "1. Assess ..."; else it just shows: "Assess ..."')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[(b'S', b'Submitted'), (b'T', b'Submitted late'), (b'F', b'Finished'), (b'G', b'Being peer-reviewed/graded'), (b'N', b'Nothing submitted yet')], default=b'N', max_length=2)),
                ('is_valid', models.BooleanField(default=False, help_text=b'Valid if: it was submitted on time, or if this is the most recent submission (there might be older ones).')),
                ('file_upload', models.FileField(upload_to=review.models.peerreview_directory_path)),
                ('submitted_file_name', models.CharField(default=b'', max_length=255)),
                ('number_reviews_assigned', models.PositiveSmallIntegerField(default=0, help_text=b'Number of times this submission has been assigned')),
                ('number_reviews_completed', models.PositiveSmallIntegerField(default=0, help_text=b'Number of times this submission has been completed')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('datetime_submitted', models.DateTimeField(auto_now_add=True, verbose_name=b'Date and time the learner/group submitted.')),
                ('group_submitted', models.ForeignKey(blank=True, default=None, help_text=b'If a group submission, it links back to it.', null=True, on_delete=django.db.models.deletion.CASCADE, to='groups.Group')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackPhase',
            fields=[
                ('prphase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='review.PRPhase')),
            ],
            bases=('review.prphase',),
        ),
        migrations.CreateModel(
            name='PeerEvaluationPhase',
            fields=[
                ('prphase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='review.PRPhase')),
                ('number_of_reviews_per_learner', models.PositiveIntegerField(default=3, help_text=b'How many reviews must each learner complete?')),
            ],
            bases=('review.prphase',),
        ),
        migrations.CreateModel(
            name='SelfEvaluationPhase',
            fields=[
                ('prphase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='review.PRPhase')),
            ],
            bases=('review.prphase',),
        ),
        migrations.CreateModel(
            name='SubmissionPhase',
            fields=[
                ('prphase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='review.PRPhase')),
                ('max_file_upload_size_MB', models.PositiveSmallIntegerField(default=10)),
                ('accepted_file_types_comma_separated', models.CharField(default=b'PDF', help_text=b'Comma separated list, for example: pdf, docx, doc', max_length=100)),
            ],
            bases=('review.prphase',),
        ),
        migrations.AddField(
            model_name='submission',
            name='phase',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='review.PRPhase', verbose_name=b'Attached with which phase'),
        ),
        migrations.AddField(
            model_name='submission',
            name='pr_process',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='review.PR_process', verbose_name=b'Peer review'),
        ),
        migrations.AddField(
            model_name='submission',
            name='submitted_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='review.Person'),
        ),
        migrations.AddField(
            model_name='rubrictemplate',
            name='phase',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='review.PRPhase'),
        ),
        migrations.AddField(
            model_name='rubrictemplate',
            name='pr_process',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='review.PR_process'),
        ),
        migrations.AddField(
            model_name='rubricactual',
            name='rubric_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='review.RubricTemplate'),
        ),
        migrations.AddField(
            model_name='rubricactual',
            name='submission',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='review.Submission'),
        ),
        migrations.AddField(
            model_name='roptionactual',
            name='roption_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='review.ROptionTemplate'),
        ),
        migrations.AddField(
            model_name='ritemtemplate',
            name='r_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='review.RubricTemplate'),
        ),
        migrations.AddField(
            model_name='ritemactual',
            name='r_actual',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='review.RubricActual'),
        ),
        migrations.AddField(
            model_name='ritemactual',
            name='ritem_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='review.RItemTemplate'),
        ),
        migrations.AddField(
            model_name='prphase',
            name='pr',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='review.PR_process', verbose_name=b'Peer review'),
        ),
    ]
